{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","className","style","color","mode","id","backgroundColor","border","type","Navbar","nav","to","src","alt","title","onClick","toggleMode","htmlFor","modeoff","TextForm","useState","text","setText","heading","value","onChange","event","console","log","target","rows","disabled","length","Uppercase","toUpperCase","showAlert","Lowercase","toLowerCase","newText","split","join","document","getElementById","select","navigator","clipboard","writeText","filter","element","Alerts","height","alert","role","msg","prototype","PropTypes","string","isRequired","defaultProps","App","setMode","modeon","changeNav","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4NACe,SAASA,EAAMC,GAE1B,OACQ,sBAAKC,UAAU,YAAYC,MAAO,CAACC,MAAoB,UAAbH,EAAMI,KAAe,QAAQ,SAAvE,UACI,oBAAIH,UAAU,OAAd,sBACJ,sBAAKA,UAAU,YAAYI,GAAG,mBAA9B,UACA,sBAAKJ,UAAU,iBAAiBC,MAAO,CAACC,MAAoB,UAAbH,EAAMI,KAAe,QAAQ,QAAQE,gBAA6B,UAAbN,EAAMI,KAAe,QAAQ,UAAUG,OAAoB,SAAbP,EAAMI,KAAc,kBAAkB,mBAAxL,UACA,oBAAIH,UAAU,mBAAmBI,GAAG,aAApC,SACC,wBAAQJ,UAAU,mBAAmBC,MAAO,CAACC,MAAoB,UAAbH,EAAMI,KAAe,QAAQ,QAAQE,gBAA6B,UAAbN,EAAMI,KAAe,QAAQ,UAAUG,OAAoB,SAAbP,EAAMI,KAAc,kBAAkB,mBAAoBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,OAAO,gBAAc,cAA1T,SACD,2DAGJ,qBAAKH,GAAG,cAAcJ,UAAU,mCAAmC,kBAAgB,aAAa,iBAAe,oBAA/G,SACA,qBAAKA,UAAU,iBAAf,0FAKJ,sBAAKA,UAAU,iBAAiBC,MAAO,CAACC,MAAoB,UAAbH,EAAMI,KAAe,QAAQ,QAAQE,gBAA6B,UAAbN,EAAMI,KAAe,QAAQ,UAAUG,OAAoB,SAAbP,EAAMI,KAAc,kBAAkB,mBAAxL,UACI,oBAAIH,UAAU,mBAAmBI,GAAG,aAApC,SACA,wBAAQJ,UAAU,6BAA6BO,KAAK,SAASN,MAAO,CAACC,MAAoB,UAAbH,EAAMI,KAAe,QAAQ,QAAQE,gBAA6B,UAAbN,EAAMI,KAAe,QAAQ,UAAUG,OAAoB,SAAbP,EAAMI,KAAc,kBAAkB,mBAAqB,iBAAe,WAAW,iBAAe,eAAe,gBAAc,QAAQ,gBAAc,cAAtU,SACI,qDAGJ,qBAAKC,GAAG,cAAcJ,UAAU,8BAA8B,kBAAgB,aAAa,iBAAe,oBAA1G,SACA,qBAAKA,UAAU,iBAAf,oQAKJ,sBAAKA,UAAU,iBAAiBC,MAAO,CAACC,MAAoB,UAAbH,EAAMI,KAAe,QAAQ,QAAQE,gBAA6B,UAAbN,EAAMI,KAAe,QAAQ,UAAUG,OAAoB,SAAbP,EAAMI,KAAc,kBAAkB,mBAAxL,UACI,oBAAIH,UAAU,mBAAmBI,GAAG,eAApC,SACA,wBAAQJ,UAAU,6BAA6BO,KAAK,SAASN,MAAO,CAACC,MAAoB,UAAbH,EAAMI,KAAe,QAAQ,QAAQE,gBAA6B,UAAbN,EAAMI,KAAe,QAAQ,UAAUG,OAAoB,SAAbP,EAAMI,KAAc,kBAAkB,mBAAqB,iBAAe,WAAW,iBAAe,iBAAiB,gBAAc,QAAQ,gBAAc,gBAAxU,SACI,+DAGJ,qBAAKC,GAAG,gBAAgBJ,UAAU,8BAA8B,kBAAgB,eAAe,iBAAe,oBAA9G,SACA,qBAAKA,UAAU,iBAAf,0O,2BCjCO,SAASQ,EAAOT,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAMI,MAAQF,MAAO,CAACI,gBAAgBN,EAAMU,KAA9F,SACN,sBAAKT,UAAU,kBAAf,UACA,cAAC,IAAD,CAAMA,UAAU,eAAeU,GAAG,IAAlC,SACE,qBAAKC,IAAI,oBAAoBC,IAAI,WAEnC,cAAC,IAAD,CAAMZ,UAAU,eAAeU,GAAG,IAAlC,SAAuCX,EAAMc,QAC7C,wBAAQb,UAAU,iBAAiBO,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMP,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,UACE,qBAAIJ,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOU,GAAG,IAAzD,oBAEF,oBAAIV,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWU,GAAG,SAA9B,wBAGN,sBAAKV,UAAS,sCAA8C,UAAbD,EAAMI,KAAe,OAAO,SAA3E,UACA,uBAAOH,UAAU,mBAAmBc,QAASf,EAAMgB,WAAYR,KAAK,WAAYH,GAAG,2BACnF,uBAAOJ,UAAU,mBAAmBgB,QAAQ,yBAA5C,SAAsEjB,EAAMkB,qBCxB/D,SAASC,EAASnB,GAC7B,MAAqBoB,mBAAS,wBAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KAwCA,OACI,sBAAKrB,UAAU,YAAf,UAEJ,sBAAKA,UAAU,OAAMC,MAAO,CAACC,MAAoB,UAAbH,EAAMI,KAAe,QAAQ,SAAjE,UACQ,6BAAKJ,EAAMuB,UACX,0BAAUtB,UAAU,eAAgBuB,MAAOH,EAAMnB,MAAO,CAACC,MAAoB,UAAbH,EAAMI,KAAe,QAAQ,QAAQE,gBAA6B,UAAbN,EAAMI,KAAe,QAAQ,mBAAoBqB,SATzJ,SAACC,GAClBC,QAAQC,IAAI,aACZN,EAAQI,EAAMG,OAAOL,QAO+KnB,GAAG,QAAQyB,KAAK,MAChN,wBAAQC,SAAwB,IAAdV,EAAKW,OAAYxB,KAAK,SAASP,UAAU,0BAA0Bc,QA7CxE,WACjBY,QAAQC,IAAI,yBACZ,IAAIK,EAAUZ,EAAKa,cACnBZ,EAAQW,GACRjC,EAAMmC,UAAU,UAAU,yBAyCtB,kCACA,wBAAQJ,SAAwB,IAAdV,EAAKW,OAAWxB,KAAK,SAASP,UAAU,8BAA8Bc,QAxC3E,WAEjBY,QAAQC,IAAI,yBACZ,IAAIQ,EAAUf,EAAKgB,cACnBf,EAAQc,GACRpC,EAAMmC,UAAU,UAAU,yBAmCtB,kCACA,wBAAQJ,SAAwB,IAAdV,EAAKW,OAAYxB,KAAK,SAASP,UAAU,4BAA4Bc,QAlCxE,WAEnBY,QAAQC,IAAI,4BACZ,IAAIU,EAAQjB,EAAKkB,MAAM,QAAQC,KAAK,KACpClB,EAAQgB,GACRtC,EAAMmC,UAAU,UAAU,yBA6BtB,gCACA,wBAASJ,SAAwB,IAAdV,EAAKW,OAAYxB,KAAK,SAASP,UAAU,2BAA2Bc,QA5BxE,WAEnBY,QAAQC,IAAI,0BAEZN,EADY,IAEZtB,EAAMmC,UAAU,UAAU,YAuBtB,wBACA,wBAAQJ,SAAwB,IAAdV,EAAKW,OAAYxB,KAAK,SAASP,UAAU,4BAA4Bc,QAtBzE,WAElB,IAAIM,EAAMoB,SAASC,eAAe,SAClCrB,EAAKsB,SACLC,UAAUC,UAAUC,UAAUzB,EAAKG,OACnCxB,EAAMmC,UAAU,UAAU,wBAiBtB,0BAEJ,sBAAKlC,UAAU,YAAYC,MAAO,CAACC,MAAoB,UAAbH,EAAMI,KAAe,QAAQ,SAAvE,UACA,mDACA,8BAAIiB,EAAKkB,MAAM,KAAKQ,QAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQhB,UAAaA,OAAnE,cAAsFX,EAAKW,OAA3F,iBACA,yCACA,4BAAIX,UC1DG,SAAS4B,EAAOjD,GAC3B,OACA,qBAAKE,MAAO,CAACgD,OAAQ,QAArB,SACClD,EAAMmD,OAAO,sBAAKlD,UAAS,sBAAiBD,EAAMmD,MAAM3C,KAA7B,gCAAiE4C,KAAK,QAApF,UACd,mCAASpD,EAAMmD,MAAM3C,KAArB,SAAuCR,EAAMmD,MAAME,SF4BvD5C,EAAO6C,UAAU,CACbxC,MAAMyC,IAAUC,OAAOC,YAE3BhD,EAAOiD,aAAa,CAChB5C,MAAO,kB,WGsCI6C,MAhEf,WACE,MAAqBvC,mBAAS,SAA9B,mBAAOhB,EAAP,KAAYwD,EAAZ,KACA,EAAuBxC,mBAAS,iBAAhC,mBAAOF,EAAP,KAAe2C,EAAf,KACA,EAAsBzC,mBAAS,WAA/B,mBAAOV,EAAP,KAAWoD,EAAX,KACA,EAAuB1C,mBAAS,MAAhC,mBAAO+B,EAAP,KAAaY,EAAb,KACM5B,EAAU,SAAC3B,EAAKwD,GAEpBD,EACE,CACEvD,KAAKA,EACL6C,IAAIW,IAIVC,YAAW,WACTF,EAAS,QAER,MAqBH,OACE,mCACF,eAAC,IAAD,WACC,cAACtD,EAAD,CAAQK,MAAM,YAAYV,KAAMA,EAAMY,WAtBpB,WAEjBW,QAAQC,IAAI,WACF,UAAPxB,GAEDwD,EAAQ,QACRC,EAAO,gBACPpB,SAASyB,KAAKhE,MAAMI,gBAAgB,UACpC6B,EAAU,UAAU,qBACpB2B,EAAU,aAGVF,EAAQ,SACRC,EAAO,iBACPpB,SAASyB,KAAKhE,MAAMI,gBAAgB,QACpC6B,EAAU,UAAU,sBACpB2B,EAAU,aAMiD5C,QAASA,EAASR,IAAKA,IACrF,cAACuC,EAAD,CAAQE,MAAOA,IACf,qBAAKlD,UAAU,iBAAf,SACA,eAAC,IAAD,WACO,cAAC,IAAD,CAAOkE,OAAK,EAACC,KAAK,SAAlB,SACE,cAACrE,EAAD,CAAOK,KAAMA,MAGf,cAAC,IAAD,CAAO+D,OAAK,EAACC,KAAK,IAAlB,SACA,cAACjD,EAAD,CAAUI,QAAQ,sBAAsBnB,KAAMA,EAAM+B,UAAWA,iBClD1DkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASC,eAAe,SAM1B2B,M","file":"static/js/main.ebd85803.chunk.js","sourcesContent":["import React from 'react'\r\nexport default function About(props) {\r\n\r\n    return (\r\n            <div className=\"container\" style={{color: props.mode==='light'?'black':'white'}}>\r\n                <h2 className=\"my-4\">About us</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\" >\r\n            <div className=\"accordion-item\" style={{color: props.mode==='light'?'black':'white',backgroundColor:props.mode==='light'?'white':'#042743',border:props.mode==='dark'?'1px solid white':'1px solid black'}}>\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n             <button className=\"accordion-button\" style={{color: props.mode==='light'?'black':'white',backgroundColor:props.mode==='light'?'white':'#042743',border:props.mode==='dark'?'1px solid white':'1px solid black'}} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n            <strong>Analyze your Text</strong>\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\">\r\n            Textutils gives you a way to analyze your text quickly and efficiently.\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"accordion-item\" style={{color: props.mode==='light'?'black':'white',backgroundColor:props.mode==='light'?'white':'#042743',border:props.mode==='dark'?'1px solid white':'1px solid black'}}>\r\n        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n        <button className=\"accordion-button collapsed\" type=\"button\" style={{color: props.mode==='light'?'black':'white',backgroundColor:props.mode==='light'?'white':'#042743',border:props.mode==='dark'?'1px solid white':'1px solid black'}}  data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n            <strong>Free to use</strong>\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\">\r\n        TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"accordion-item\" style={{color: props.mode==='light'?'black':'white',backgroundColor:props.mode==='light'?'white':'#042743',border:props.mode==='dark'?'1px solid white':'1px solid black'}} >\r\n        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n        <button className=\"accordion-button collapsed\" type=\"button\" style={{color: props.mode==='light'?'black':'white',backgroundColor:props.mode==='light'?'white':'#042743',border:props.mode==='dark'?'1px solid white':'1px solid black'}}  data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n            <strong>Browser Compatibility</strong>\r\n        </button>\r\n        </h2>\r\n        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\">\r\n        This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode}`} style={{backgroundColor:props.nav}}>\r\n  <div className=\"container-fluid\">\r\n  <Link className=\"navbar-brand\" to=\"/\">\r\n    <img src=\"favicon-32x32.png\" alt=\"Logo\" />\r\n  </Link>\r\n  <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n      </li>\r\n    </ul>\r\n  <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.modeoff}</label>\r\n  </div>\r\n  </div>\r\n</div>\r\n</nav>\r\n    )\r\n}\r\nNavbar.prototype={\r\n    title:PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps={\r\n    title: \"Set title here\"\r\n}\r\n\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text,setText]=useState('Enter your text here')\r\n    const  handleUpClick=() =>{\r\n        console.log('Uppercase was clicked')\r\n        let Uppercase=text.toUpperCase();\r\n        setText(Uppercase);\r\n        props.showAlert('success','Changed to Uppercase')\r\n    }\r\n    const handleLowClick=()=>\r\n    {\r\n        console.log('Lowercase was Clicked')\r\n        let Lowercase=text.toLowerCase()\r\n        setText(Lowercase)\r\n        props.showAlert('success','Changed to Lowercase')\r\n    }\r\n    const handleSpaceClick=()=>\r\n    {\r\n        console.log('Remove space was Clicked')\r\n        let newText=text.split(/[ ]+/).join(\" \")\r\n        setText(newText)\r\n        props.showAlert('success','Extra spaces removed')\r\n    }\r\n    const handleClearClick=()=>\r\n    {\r\n        console.log('Clear Text was Clicked')\r\n        let newText=\"\"\r\n        setText(newText)\r\n        props.showAlert('success','Cleared')\r\n    }\r\n    const handleCopyClick=()=>\r\n    {\r\n        var text =document.getElementById(\"mybox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert('success','Copied to Clipboard')\r\n\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        console.log('On change')\r\n        setText(event.target.value)\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n    \r\n    <div className=\"mb-3\"style={{color: props.mode==='light'?'black':'white'}}>\r\n            <h2>{props.heading}</h2>\r\n            <textarea className=\"form-control\"  value={text} style={{color: props.mode==='light'?'black':'white',backgroundColor:props.mode==='light'?'white':'rgb(87 118 143)'}} onChange={handleOnChange} id=\"mybox\" rows=\"8\"></textarea>\r\n            <button disabled={text.length===0} type=\"button\" className=\"btn btn-info mx-3 my-2 \" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0}type=\"button\" className=\"btn btn-secondary mx-3 my-2\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n            <button disabled={text.length===0} type=\"button\" className=\"btn btn-warning mx-3 my-2\" onClick={handleSpaceClick}>Remove extra Space</button>\r\n            <button  disabled={text.length===0} type=\"button\" className=\"btn btn-danger mx-3 my-2\" onClick={handleClearClick}>Clear Text</button>\r\n            <button disabled={text.length===0} type=\"button\" className=\"btn btn-success mx-3 my-2\" onClick={handleCopyClick}>Copy Text</button>\r\n    </div>\r\n        <div className=\"container\" style={{color: props.mode==='light'?'black':'white'}}>\r\n        <h3>Your text summary</h3>\r\n        <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n        <h3>Preview</h3>\r\n        <p>{text}</p>\r\n        </div>\r\n        \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alerts(props) {\r\n    return (\r\n    <div style={{height: '44px'}}>\r\n    {props.alert&&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{props.alert.type} : </strong>{props.alert.msg}\r\n    </div>}\r\n    </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport React, { useState } from 'react'\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alerts from './components/Alerts';\nimport{\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const [modeoff,modeon]=useState('Dark mode off');\n  const [nav,changeNav]=useState('#fcf99f');\n  const [alert,setAlert]=useState(null);\n  const showAlert=(type,message)=>\n  {\n    setAlert(\n      {\n        type:type,\n        msg:message,\n    \n     }\n    )\n  setTimeout(() => {\n    setAlert(null)\n    \n  }, 2000);\n  }\n  const toggleMode = ()=>\n  {\n    console.log('clicked');\n    if(mode==='light')\n    {\n      setMode('dark');\n      modeon('Dark mode on');\n      document.body.style.backgroundColor='#042743';\n      showAlert('success','Dark mode enabled');\n      changeNav('#292828');\n    }\n    else{\n      setMode('light');\n      modeon('Dark mode off');\n      document.body.style.backgroundColor='white';\n      showAlert('success','Light mode enabled');\n      changeNav('#fcf99f');\n    }\n  }\n  return (\n    <>\n  <Router>\n   <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} modeoff={modeoff} nav={nav} />\n   <Alerts alert={alert}/>\n   <div className=\"container my-3\">\n   <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode}/>\n          </Route>\n         \n          <Route exact path=\"/\">\n          <TextForm heading=\"Enter the Text here\" mode={mode} showAlert={showAlert}/>\n          </Route>\n        </Switch>\n\n   \n   \n   </div>\n   </Router>\n   \n    </>\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}